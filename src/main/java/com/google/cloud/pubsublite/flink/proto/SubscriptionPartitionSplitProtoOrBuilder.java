/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: checkpoints.proto

package com.google.cloud.pubsublite.flink.proto;

public interface SubscriptionPartitionSplitProtoOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.pubsublite.flink.SubscriptionPartitionSplitProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The Pub/Sub Lite subscription path for this split.
   * </pre>
   *
   * <code>string subscription = 1;</code>
   *
   * @return The subscription.
   */
  java.lang.String getSubscription();
  /**
   *
   *
   * <pre>
   * The Pub/Sub Lite subscription path for this split.
   * </pre>
   *
   * <code>string subscription = 1;</code>
   *
   * @return The bytes for subscription.
   */
  com.google.protobuf.ByteString getSubscriptionBytes();

  /**
   *
   *
   * <pre>
   * The partition corresponding to this split.
   * </pre>
   *
   * <code>int64 partition = 2;</code>
   *
   * @return The partition.
   */
  long getPartition();

  /**
   *
   *
   * <pre>
   * The cursor for this split.
   * </pre>
   *
   * <code>.google.cloud.pubsublite.flink.SubscriptionPartitionSplitProto.Cursor start = 3;</code>
   *
   * @return Whether the start field is set.
   */
  boolean hasStart();
  /**
   *
   *
   * <pre>
   * The cursor for this split.
   * </pre>
   *
   * <code>.google.cloud.pubsublite.flink.SubscriptionPartitionSplitProto.Cursor start = 3;</code>
   *
   * @return The start.
   */
  com.google.cloud.pubsublite.flink.proto.SubscriptionPartitionSplitProto.Cursor getStart();
  /**
   *
   *
   * <pre>
   * The cursor for this split.
   * </pre>
   *
   * <code>.google.cloud.pubsublite.flink.SubscriptionPartitionSplitProto.Cursor start = 3;</code>
   */
  com.google.cloud.pubsublite.flink.proto.SubscriptionPartitionSplitProto.CursorOrBuilder
      getStartOrBuilder();
}
